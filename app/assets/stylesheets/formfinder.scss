//I dont understand the need for
// breaking up the css based on colors and
// then other defs make it harder to follow

// === Colour definitions ================

// I understand that there is likely to be only
// one nav on the page but in terms of css why not use
// a class as its less specific and keeps your css specificity
// score down.
// if you look in app/views/shared/_nav_bar.haml I removed the id
// of nav and moved it to ul as a class

// eg. ul.admin-navigation

.admin-navigation { border-bottom-color: $border-colour; }
// looking at app/views/shared/_nav_bar.haml i cant see where
// this class would be used so it could potentially be removed
.admin-navigation .active { background-color: $grey-2; }
.admin-navigation a { color: $text-colour; }
.admin-navigation a:hover { background-color: $grey-3; }

// Should this not be in /stylesheets/moj/_buttons.scss?
.button-warning { @include button($red); }

//Where is .list used?
.list li:nth-child(even),
.un-assigned li:nth-child(even) {
  background-color: $highlight-colour;
  border-bottom-color: $panel-colour;
}

.no-result-message { border-color: $error-colour; }

.notice-summary {
  background-color: $turquoise;
  border-color: $turquoise;
  color: $page-colour;
}

.search-wrapper {
  background-color: $panel-colour;
  border-bottom-color: $border-colour;
}

// === Class definitions =================

.attributes:after { content: ")"; }
.attributes:before { content: "("; }
.attributes {
  display: inline;
  font-size: smaller;
}

.autocomplete__wrapper { margin-bottom: 5px }

.item { display: block; }

.list li { margin-bottom: 15px; }

.list li:nth-child(even),
.un-assigned li:nth-child(even) {
  border-bottom-style: solid;
  border-bottom-width: 1px;
}

.no-result-message {
  border-style: solid;
  border-width: 2px;
  display: block;
  margin: 15px;
  padding: 15px;
  text-align: center;
}

.notice-summary { text-align: center; }

.reference {
  display: inline;
  font-weight: bold;
  margin-right: 0.4em;
}

.search-wrapper {
  border-bottom-style: solid;
  border-bottom-width: 1px;
  padding: 15px;
  width: 20em;
}


// Why are the next four media queries separated?
// They could just be a single media query. DRY and clean

/* Instead of hard coding px min/max widths why not use
   GOVUK Frontend Toolkits media mixins where you can say
   mobile tablet,desktop and even target specific IE versions

https://github.com/alphagov/govuk_frontend_toolkit/blob/master/stylesheets/_conditionals.scss

// Media query helpers. These make producing IE layouts
// super easy.

// The base css you write should be for mobile. You can
// then add desktop styles on top.
//
// Usage:
//
//   div.columns {
//     border: 1px solid;
//
//     @include media(desktop){
//       width: 30%;
//       float: left;
//     }
//     @include ie-lte(8) {
//       something to fix visual bugs in old IE
//     }
//     @include ie(6) {
//       padding: 0;
//     }
//   }


*/
@media (min-width: 641px) {
  .action {
    display: inline-block;
    height: 100%;
    width: 54px;
  }
}

@media (min-width: 641px) {
  .list li {
    height: 100%;
    margin-bottom: 0;
    padding: 15px;
    width: 100%;
  }
}

@media (min-width: 641px) {
  #search_field { margin-bottom: 5px; }
}

@media (min-width: 641px) {
  .item {
    display: inline-block;
    margin-bottom: 0;
    height: 100%;
  }
  .column-full ul li .item {
    width: 91%;
    vertical-align: -moz-middle-with-baseline;
  }
  .column-two-thirds ul li .item {
    width: 84%;
    vertical-align: -moz-middle-with-baseline;
  }
}

// === Element definitions ===============

body {
  #global-header .header-wrapper {
    .header-global,
    .header-proposition {
      display: inline-block;
    }
    .header-global {
      float: none;
      margin-left: 1em;
      margin-right: 1em;
      width: 264px;
    }
    .header-proposition {
      padding-top: 10px;
      width: 66%;
      .sign-out {
        padding-right: 1em;
      }
    }
  }
  #admin-navigation ul {
    border-bottom: 1px solid;
    list-style-type: none;
    margin: 0;
    overflow: hidden;
    padding: 0;
    li {
      display: inline-block;
      a {
        display: inline-block;
        padding: 8px 16px;
        text-align: center;
        text-decoration: none;
      }
    }
  }
  @media screen and (max-width: 640px) {
    #admin-navigation ul {
      li {
        display: block;
      }
    }
  }
}

form {
  // if you are overwriting GOVUK styling then why not
  // place it in stylesheets/moj/_govuk_overrides.scss?
  .form-group {
    .form-hint {
      margin-bottom: 5px;
    }
    input#document_attachment {
      display: block;
      margin-top: 3px;
    }
  }
}

// if you are overwriting buttons styling then why not
// place it in stylesheets/moj/_buttons.scss?
@media screen and (max-width: 640px) {
  .button-left-spacing {
    margin-left: 0;
  }
  .button,
  .button-warning,
  .button-secondary  {
    margin-top: 10px;
    padding-left: 0;
    padding-right: 0;
    text-align: center;
    width: 100%;
  }
}

// if you are overwriting GOVUK styling then why not
// place it in stylesheets/moj/_govuk_overrides.scss?
@media (min-width: 641px) {
  input#search_field.form-control {
    display: block;
    width: 20em;
  }
}
